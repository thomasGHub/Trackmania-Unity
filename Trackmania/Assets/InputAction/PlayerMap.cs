//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/InputAction/PlayerMap.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerMap : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerMap()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerMap"",
    ""maps"": [
        {
            ""name"": ""PlayerMovement"",
            ""id"": ""1c8b1290-72d2-4bc3-b9dd-c5e471f07cdf"",
            ""actions"": [
                {
                    ""name"": ""Forward/Backward"",
                    ""type"": ""Value"",
                    ""id"": ""79769d11-3efa-4c05-ab08-a52332471262"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Left/Rigth"",
                    ""type"": ""Value"",
                    ""id"": ""e54e65bd-a0f1-48b7-bb0e-9042d2880ef7"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Respawn"",
                    ""type"": ""Button"",
                    ""id"": ""388f1d05-2ab4-4117-a1fc-6a835c2db715"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Restart"",
                    ""type"": ""Button"",
                    ""id"": ""8218d3a1-bc0e-466a-a690-790e3125ac15"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis PC"",
                    ""id"": ""c61c7cb3-1940-402b-b5e3-5fa4e7a39074"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Forward/Backward"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""f48fcae1-9b28-440a-a7d1-617cc22a481d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Forward/Backward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""e0f7c6bf-e8b9-4d4a-ab16-cd04f6f9a637"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Forward/Backward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis PC Arrow"",
                    ""id"": ""240b0b47-9b0f-421c-bc1b-49f4fdfdce1b"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Forward/Backward"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""115f366d-6bd2-40d4-9a7c-16d8ec827efd"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Forward/Backward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""f3d3fe62-5aa2-4715-bc92-1a687753acb9"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Forward/Backward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis Controller"",
                    ""id"": ""cac1be87-7359-4df4-9fd1-49c8d9b81fe9"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Forward/Backward"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""2a4d3d69-1021-4696-bbee-6aad4a294924"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Forward/Backward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""a570c11b-780a-4b7c-a6ce-86966ce7beca"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Forward/Backward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis PC"",
                    ""id"": ""81f24944-fb5e-4d62-927a-22e71b545484"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left/Rigth"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""02e3cfbf-58a6-4221-a012-ea1631b0402f"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Left/Rigth"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""6ca81655-6dc7-4c0b-9b10-9a69c6c68d23"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Left/Rigth"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis PC Arrow"",
                    ""id"": ""dc43140f-353c-4c6d-bf4f-362929076ff9"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left/Rigth"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""28c3a5c1-f5a7-4627-866a-3604cbfc4089"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Left/Rigth"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""8aaf28bf-199b-4791-ab86-54b9ab2824e5"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Left/Rigth"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis Controller"",
                    ""id"": ""73e80d43-6879-4a2f-ab5a-b4b79ee91172"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left/Rigth"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""bcb2ee71-73f8-4cb5-b8c2-03c0a702b9f4"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Left/Rigth"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""29bc8fbc-f887-41f8-bf0b-2070ed33a63a"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Left/Rigth"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""ddf565c7-1909-4b16-8de2-6990c6a5e20f"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Respawn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15f3fae2-738b-4226-81d1-0c218aae53b2"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Respawn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""750b188c-1014-47bb-9d0c-0f438602b3e9"",
                    ""path"": ""<Keyboard>/delete"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Restart"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9ce69747-0720-481d-957b-39236174ba2e"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Restart"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PlayerUX"",
            ""id"": ""b7db1d45-2b26-4632-8c3c-31fb03057d58"",
            ""actions"": [
                {
                    ""name"": ""CameraSwitch"",
                    ""type"": ""Value"",
                    ""id"": ""ac3e1299-7cd1-4952-8a7a-f3149a290362"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""StartRace"",
                    ""type"": ""Button"",
                    ""id"": ""a41f0ee9-df50-411d-a778-018f5f76566e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Camera Choice Desktop"",
                    ""id"": ""aa121452-6822-4abb-a46e-bc636301522f"",
                    ""path"": ""CameraChoice"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraSwitch"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""triggerCam1"",
                    ""id"": ""91f9ad6e-747e-4a69-b901-28c5f1c8cb60"",
                    ""path"": ""<Keyboard>/numpad1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""CameraSwitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""triggerCam2"",
                    ""id"": ""71716d6f-fd0b-4144-a3d8-c3fb6795103a"",
                    ""path"": ""<Keyboard>/numpad2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""CameraSwitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""triggerCam3"",
                    ""id"": ""1e9a6b2d-9cde-47e9-aa1a-01692f8dd968"",
                    ""path"": ""<Keyboard>/numpad3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""CameraSwitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Camera Choice Gamepad"",
                    ""id"": ""0d91e93c-a0d4-4b8e-8b20-74b17ad5ebcf"",
                    ""path"": ""CameraChoiceGamepad"",
                    ""interactions"": """",
                    ""processors"": ""Circle"",
                    ""groups"": """",
                    ""action"": ""CameraSwitch"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""changeCam"",
                    ""id"": ""de077059-d1bd-458f-9b7d-9cad1b720bad"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""CameraSwitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""4ac94ad6-75b2-42d8-b066-2b78cef8a0f5"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""StartRace"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e803728b-dd12-45db-8139-625e239bd135"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StartRace"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""PC"",
            ""bindingGroup"": ""PC"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Controller"",
            ""bindingGroup"": ""Controller"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // PlayerMovement
        m_PlayerMovement = asset.FindActionMap("PlayerMovement", throwIfNotFound: true);
        m_PlayerMovement_ForwardBackward = m_PlayerMovement.FindAction("Forward/Backward", throwIfNotFound: true);
        m_PlayerMovement_LeftRigth = m_PlayerMovement.FindAction("Left/Rigth", throwIfNotFound: true);
        m_PlayerMovement_Respawn = m_PlayerMovement.FindAction("Respawn", throwIfNotFound: true);
        m_PlayerMovement_Restart = m_PlayerMovement.FindAction("Restart", throwIfNotFound: true);
        // PlayerUX
        m_PlayerUX = asset.FindActionMap("PlayerUX", throwIfNotFound: true);
        m_PlayerUX_CameraSwitch = m_PlayerUX.FindAction("CameraSwitch", throwIfNotFound: true);
        m_PlayerUX_StartRace = m_PlayerUX.FindAction("StartRace", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerMovement
    private readonly InputActionMap m_PlayerMovement;
    private IPlayerMovementActions m_PlayerMovementActionsCallbackInterface;
    private readonly InputAction m_PlayerMovement_ForwardBackward;
    private readonly InputAction m_PlayerMovement_LeftRigth;
    private readonly InputAction m_PlayerMovement_Respawn;
    private readonly InputAction m_PlayerMovement_Restart;
    public struct PlayerMovementActions
    {
        private @PlayerMap m_Wrapper;
        public PlayerMovementActions(@PlayerMap wrapper) { m_Wrapper = wrapper; }
        public InputAction @ForwardBackward => m_Wrapper.m_PlayerMovement_ForwardBackward;
        public InputAction @LeftRigth => m_Wrapper.m_PlayerMovement_LeftRigth;
        public InputAction @Respawn => m_Wrapper.m_PlayerMovement_Respawn;
        public InputAction @Restart => m_Wrapper.m_PlayerMovement_Restart;
        public InputActionMap Get() { return m_Wrapper.m_PlayerMovement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerMovementActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerMovementActions instance)
        {
            if (m_Wrapper.m_PlayerMovementActionsCallbackInterface != null)
            {
                @ForwardBackward.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnForwardBackward;
                @ForwardBackward.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnForwardBackward;
                @ForwardBackward.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnForwardBackward;
                @LeftRigth.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnLeftRigth;
                @LeftRigth.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnLeftRigth;
                @LeftRigth.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnLeftRigth;
                @Respawn.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnRespawn;
                @Respawn.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnRespawn;
                @Respawn.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnRespawn;
                @Restart.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnRestart;
                @Restart.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnRestart;
                @Restart.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnRestart;
            }
            m_Wrapper.m_PlayerMovementActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ForwardBackward.started += instance.OnForwardBackward;
                @ForwardBackward.performed += instance.OnForwardBackward;
                @ForwardBackward.canceled += instance.OnForwardBackward;
                @LeftRigth.started += instance.OnLeftRigth;
                @LeftRigth.performed += instance.OnLeftRigth;
                @LeftRigth.canceled += instance.OnLeftRigth;
                @Respawn.started += instance.OnRespawn;
                @Respawn.performed += instance.OnRespawn;
                @Respawn.canceled += instance.OnRespawn;
                @Restart.started += instance.OnRestart;
                @Restart.performed += instance.OnRestart;
                @Restart.canceled += instance.OnRestart;
            }
        }
    }
    public PlayerMovementActions @PlayerMovement => new PlayerMovementActions(this);

    // PlayerUX
    private readonly InputActionMap m_PlayerUX;
    private IPlayerUXActions m_PlayerUXActionsCallbackInterface;
    private readonly InputAction m_PlayerUX_CameraSwitch;
    private readonly InputAction m_PlayerUX_StartRace;
    public struct PlayerUXActions
    {
        private @PlayerMap m_Wrapper;
        public PlayerUXActions(@PlayerMap wrapper) { m_Wrapper = wrapper; }
        public InputAction @CameraSwitch => m_Wrapper.m_PlayerUX_CameraSwitch;
        public InputAction @StartRace => m_Wrapper.m_PlayerUX_StartRace;
        public InputActionMap Get() { return m_Wrapper.m_PlayerUX; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerUXActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerUXActions instance)
        {
            if (m_Wrapper.m_PlayerUXActionsCallbackInterface != null)
            {
                @CameraSwitch.started -= m_Wrapper.m_PlayerUXActionsCallbackInterface.OnCameraSwitch;
                @CameraSwitch.performed -= m_Wrapper.m_PlayerUXActionsCallbackInterface.OnCameraSwitch;
                @CameraSwitch.canceled -= m_Wrapper.m_PlayerUXActionsCallbackInterface.OnCameraSwitch;
                @StartRace.started -= m_Wrapper.m_PlayerUXActionsCallbackInterface.OnStartRace;
                @StartRace.performed -= m_Wrapper.m_PlayerUXActionsCallbackInterface.OnStartRace;
                @StartRace.canceled -= m_Wrapper.m_PlayerUXActionsCallbackInterface.OnStartRace;
            }
            m_Wrapper.m_PlayerUXActionsCallbackInterface = instance;
            if (instance != null)
            {
                @CameraSwitch.started += instance.OnCameraSwitch;
                @CameraSwitch.performed += instance.OnCameraSwitch;
                @CameraSwitch.canceled += instance.OnCameraSwitch;
                @StartRace.started += instance.OnStartRace;
                @StartRace.performed += instance.OnStartRace;
                @StartRace.canceled += instance.OnStartRace;
            }
        }
    }
    public PlayerUXActions @PlayerUX => new PlayerUXActions(this);
    private int m_PCSchemeIndex = -1;
    public InputControlScheme PCScheme
    {
        get
        {
            if (m_PCSchemeIndex == -1) m_PCSchemeIndex = asset.FindControlSchemeIndex("PC");
            return asset.controlSchemes[m_PCSchemeIndex];
        }
    }
    private int m_ControllerSchemeIndex = -1;
    public InputControlScheme ControllerScheme
    {
        get
        {
            if (m_ControllerSchemeIndex == -1) m_ControllerSchemeIndex = asset.FindControlSchemeIndex("Controller");
            return asset.controlSchemes[m_ControllerSchemeIndex];
        }
    }
    public interface IPlayerMovementActions
    {
        void OnForwardBackward(InputAction.CallbackContext context);
        void OnLeftRigth(InputAction.CallbackContext context);
        void OnRespawn(InputAction.CallbackContext context);
        void OnRestart(InputAction.CallbackContext context);
    }
    public interface IPlayerUXActions
    {
        void OnCameraSwitch(InputAction.CallbackContext context);
        void OnStartRace(InputAction.CallbackContext context);
    }
}
